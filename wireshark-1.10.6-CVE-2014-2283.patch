diff --git a/epan/dissectors/packet-rlc.c b/epan/dissectors/packet-rlc.c
index 32f6b6f..1715be4 100644
--- a/epan/dissectors/packet-rlc.c
+++ b/epan/dissectors/packet-rlc.c
@@ -413,7 +413,7 @@ rlc_sdu_create(void)
 {
     struct rlc_sdu *sdu;
 
-    sdu = (struct rlc_sdu *)se_alloc0(sizeof(struct rlc_sdu));
+    sdu = (struct rlc_sdu *)g_malloc0(sizeof(struct rlc_sdu));
     return sdu;
 }
 
@@ -474,7 +474,7 @@ rlc_frag_create(tvbuff_t *tvb, enum rlc_mode mode, packet_info *pinfo,
 {
     struct rlc_frag *frag;
 
-    frag = (struct rlc_frag *)se_alloc0(sizeof(struct rlc_frag));
+    frag = (struct rlc_frag *)g_malloc0(sizeof(struct rlc_frag));
     rlc_frag_assign(frag, mode, pinfo, seq, li);
     rlc_frag_assign_data(frag, tvb, offset, length);
 
@@ -518,6 +518,7 @@ free_sequence_table_entry_data(gpointer data)
         g_list_free(list->list);
         list->list = NULL;   /* for good measure */
     }
+    g_free(list);
 }
 
 /** Utility functions used for various comparions/cleanups in tree **/
@@ -875,7 +876,7 @@ get_frags(packet_info * pinfo, struct rlc_channel * ch_lookup)
     } else if (pinfo != NULL) {
         struct rlc_channel *ch;
         ch = rlc_channel_create(ch_lookup->mode, pinfo);
-        frags = (struct rlc_frag **)se_alloc0(sizeof(struct rlc_frag *) * 4096);
+        frags = (struct rlc_frag **)g_malloc0(sizeof(struct rlc_frag *) * 4096);
         g_hash_table_insert(fragment_table, ch, frags);
     } else {
         return NULL;
@@ -1227,7 +1228,7 @@ rlc_is_duplicate(enum rlc_mode mode, packet_info *pinfo, guint16 seq,
     list = (struct rlc_seqlist *)g_hash_table_lookup(sequence_table, &lookup.ch);
     if (!list) {
         /* we see this channel for the first time */
-        list = (struct rlc_seqlist *)se_alloc0(sizeof(*list));
+        list = (struct rlc_seqlist *)g_malloc0(sizeof(*list));
         rlc_channel_assign(&list->ch, mode, pinfo);
         g_hash_table_insert(sequence_table, &list->ch, list);
     }
